{"version":3,"sources":["services/contactsAPI.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-slice.js","redux/store.js","components/Container/Container.styled.js","components/Container/Container.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Spinner/Spinner.styled.js","components/Spinner/Spinner.jsx","App.js","index.js"],"names":["fetchContacts","a","axios","get","data","addContacts","newContact","post","deleteContacts","contactId","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","addContact","contact","deleteContact","contactsSlice","createSlice","name","initialState","extraReducers","fulfilled","_","payload","state","filter","id","filterSlice","reducers","changeFilter","action","errorSlice","pending","rejected","error","message","isLoadingSlice","items","reducer","isLoading","actions","combineReducers","store","configureStore","contactsReducer","devTools","process","ContainerWrap","Container","children","Wrapper","styled","div","Title","h2","Section","title","getContactList","getFilterValue","isLoadingValue","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","sort","b","localeCompare","CustomForm","Label","Input","Button","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","onInputChange","e","target","value","onSubmit","preventDefault","allContacts","includedContact","find","toast","duration","position","findContact","success","autoComplete","size","type","pattern","required","onChange","placeholder","autoFocus","List","ul","ListItem","li","button","ContactList","useEffect","map","onClick","FilterInput","Filter","LoaderWrapper","Spinner","color","height","width","timeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4532fbc6.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://611bcc0422020a00175a473e.mockapi.io';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContacts(newContact) {\n  const { data } = await axios.post(`/contacts`, newContact);\n  return data;\n}\n\n\nexport async function deleteContacts(contactId) {\n  const { data } = await axios.delete(`/contacts/${contactId}`);\n  return data;\n}","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport * as contactsAPI from '../../services/contactsAPI'\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    const contacts = await contactsAPI.fetchContacts()\n    return contacts\n  }\n)\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async (newContact)=>{\n    const contact = await contactsAPI.addContacts(newContact);\n    return contact;\n  }\n)\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactId) => {\n    await contactsAPI.deleteContacts(contactId);\n    return contactId;\n  }\n)\n","import { combineReducers } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from './contacts-operations';\n\nconst contactsSlice = createSlice({\n  name: 'items',\n  initialState: [],\n  extraReducers: {\n    [fetchContacts.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\n    [deleteContact.fulfilled]: (state, { payload }) => {\n      return state.filter((contact) => contact.id !== payload);\n    },\n  },\n});\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    changeFilter: (_, action) => action.payload,\n  },\n});\n\nconst errorSlice = createSlice({\n  name: 'error',\n  initialState: [],\n  extraReducers: {\n    [fetchContacts.pending]: () => null,\n    [fetchContacts.rejected]: (_, action) => action.error.message,\n  },\n});\n\nconst isLoadingSlice = createSlice({\n  name: 'isLoading',\n  initialState: false,\n  extraReducers: {\n    [fetchContacts.pending]: () => true,\n    [fetchContacts.fulfilled]: () => false,\n    [fetchContacts.rejected]: () => false,\n    \n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n  },\n});\n\nconst items = contactsSlice.reducer;\nconst filter = filterSlice.reducer;\nconst error = errorSlice.reducer;\nconst isLoading = isLoadingSlice.reducer;\n\nexport const { changeFilter } = filterSlice.actions;\nexport default combineReducers({\n  items,\n  filter,\n  error,\n  isLoading\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from '../redux/contacts/contacts-slice';\n\nexport const store = configureStore({\n  reducer: {contacts: contactsReducer},\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import styled from \"@emotion/styled/macro\";\n\nexport const ContainerWrap = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 0 15px;\n\n  margin: 0 auto;\n\n  /* background-color: #bcbabe; */\n`;\n","import {ContainerWrap} from './Container.styled'\n\nfunction Container({ children }) {\n  return <ContainerWrap>{children}</ContainerWrap>;\n}\n\nexport default Container;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  width: 500px;\n  display: block;\n  padding: 20px 30px;\n  margin: 0 auto;\n  margin-top: 40px;\n\n  text-align: center;\n\n  background-color: var(--bg-section);\n  color: var(--text-color-main);\n  border-radius: 4px;\n  box-shadow: 4px 4px 8px 0px rgba(154, 158, 171, 0.2);\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Title = styled.h2`\n  display: inline-block;\n  align-items: baseline;\n  margin: 0;\n  margin-bottom: 20px;\n  margin-right: 10px;\n  font-size: 32px;\n  font-weight: 700;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport {Wrapper, Title} from './Section.styled.js';\n\nfunction Section({ title, children }) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title> {children}\n    </Wrapper>\n  );\n}\n\n\n\nSection.propTypes={\n  title: PropTypes.string,\n}\n\nexport default Section;\n","import {createSelector} from '@reduxjs/toolkit';\nexport const getContactList = (state) => state.contacts.items;\nexport const getFilterValue = (state) => state.contacts.filter;\nexport const isLoadingValue = (state) => state.contacts.isLoading;\n\nexport const getVisibleContacts = createSelector(\n  [getContactList, getFilterValue],\n\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts\n      .filter(({ name }) => name.toLowerCase().includes(normalizedFilter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import styled from \"@emotion/styled/macro\";\n\nexport const CustomForm = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  align-items: baseline;\n  text-align: start;\n  font-size: 20px;\n  margin-bottom: 20px;\n\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 400px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  /* background-color: #9a9eab; */\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 8px 16px;\n  color: #ec96a4;\n  font-weight: bold;\n  font-size: 14px;\n  line-height: 24px;\n  text-transform: uppercase;\n\n  cursor: pointer;\n\n  margin: 0 auto;\n  margin-top: 15px;\n  transition: all 300ms linear;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n`;\n\nexport const ErrorMsg = styled.div`\n  font-size: 14px;\n  color: var(--notification-color);\n  margin-bottom: 10px;\n`;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaUserAlt, FaPhoneAlt } from 'react-icons/fa';\nimport toast from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { getContactList } from '../../redux/contacts/contacts-selectors';\nimport { CustomForm, Label, Input, Button } from './ContactForm.styled';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContactList);\n  const dispatch = useDispatch();\n\n  const findContact = (allContacts, name) => {\n    const includedContact = allContacts\n      ? allContacts.find(\n          (contact) => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      : '';\n\n    if (includedContact) {\n      toast.error(`${name} is already in contacts.`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n      return includedContact;\n    }\n  };\n\n  const onInputChange = (e) => {\n    const { value, name } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n\n    const settedName = findContact(contacts, name);\n\n    if (settedName) {\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n      toast.success(`Contact ${name} added to Phonebook`, {\n        duration: 4000,\n        position: 'top-right',\n      });\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <div>\n      <CustomForm onSubmit={onFormSubmit} autoComplete='off'>\n        <Label>\n          <FaUserAlt size='16' />\n          Name\n          <Input\n            type='text'\n            name='name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={onInputChange}\n            value={name}\n            placeholder='Rosie Simpson'\n            autoFocus\n          />\n        </Label>\n        <Label>\n          <FaPhoneAlt size='16' />\n          Phone\n          <Input\n            type='tel'\n            name='number'\n            pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\n            title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\n            required\n            onChange={onInputChange}\n            value={number}\n            placeholder='38(***) *** ****'\n          />\n        </Label>\n        <Button>Add Contact</Button>\n      </CustomForm>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  padding: 0;\n  list-style: none;\n  margin: 0;\n  margin-top: 35px;\n\n  font-size: 17px;\n`;\n\nexport const ListItem = styled.li`\n  border: 1px solid white;\n  border-radius: 5px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n\n  background-color: white;\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  padding: 4px 8px;\n  color: var(--text-color-accent);\n\n  font-size: 17px;\n  line-height: 20px;\n  text-transform: capitalize;\n\n  cursor: pointer;\n\n  transition: all 300ms linear;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    color: #f1f1f2;\n    background-color: #444c5c;\n    transform: scale(1.03);\n  }\n  & > svg {\n    margin-left: 8px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BsTrashFill } from 'react-icons/bs';\nimport { RiContactsFill } from 'react-icons/ri';\nimport { List, ListItem, Button } from './ContactList.styled';\nimport { fetchContacts,  deleteContact,} from '../../redux/contacts/contacts-operations';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {contacts.map((contact) => {\n        return (\n          <ListItem key={contact.id}>\n            <RiContactsFill size='17' />\n            {contact.name}: {contact.number}\n            <Button\n              type='button'\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n              <BsTrashFill></BsTrashFill>\n            </Button>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\n\nexport const FilterInput = styled.input`\n  margin-top: 5px;\n  margin-bottom: 5px;\n  width: 400px;\n  height: 35px;\n\n  border: none;\n  border-radius: 4px;\n  padding-left: 15px;\n  color: #444c5c;\n\n  &:placeholder-shown {\n    font-size: 14px;\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border: 1px solid #444c5c;\n    box-shadow: 3px 4px 5px 0px rgb(120 165 163 / 20%);\n  }\n`;\n\nexport const Label = styled.label`\n  text-align: start;\n  display: inline-block;\n  align-items: baseline;\n\n  font-size: 20px;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n  & input {\n    margin-top: 5px;\n    width: 400px;\n    height: 35px;\n\n    border: none;\n    border-radius: 4px;\n  }\n  & > svg {\n    margin-right: 10px;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { FaSearch } from 'react-icons/fa';\nimport { FilterInput, Label } from './Filter.styled';\nimport { getFilterValue } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-slice';\n\nfunction Filter() {\n  const value = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  \n  const onFilterChange = (e) => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <div>\n      <Label>\n        <FaSearch size='14'></FaSearch>Find contacts by name\n        <FilterInput\n          type='text'\n          name='filter'\n          title='Введите запрос для поиска'\n          required\n          onChange={onFilterChange}\n          value={value}\n          autoComplete='off'\n        />\n      </Label>\n    </div>\n  );\n}\n\nexport default Filter;\n","import styled from \"@emotion/styled/macro\";\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import Loader from \"react-loader-spinner\";\nimport {LoaderWrapper} from './Spinner.styled'\n\nexport function Spinner() {\n  return (\n    <LoaderWrapper>\n      <Loader\n      type=\"ThreeDots\"\n      color=\"#ec96a4\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n    </LoaderWrapper>\n  );\n}\n","import { Toaster } from 'react-hot-toast';\nimport { HiUsers } from 'react-icons/hi';\nimport { FaAddressBook } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport Container from './components/Container/Container';\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { Spinner } from './components/Spinner/Spinner';\nimport { isLoadingValue } from './redux/contacts/contacts-selectors';\n\nfunction App() {\n  const isLoading = useSelector(isLoadingValue);\n\n  return (\n    <Container>\n      <Toaster />\n      <Section title={'Phonebook'}>\n        <FaAddressBook size='24' />\n        <ContactForm />\n      </Section>\n\n      <Section title={'Contacts'}>\n        <HiUsers size='26' />\n        <Filter />\n        <ContactList />\n      </Section>\n      {isLoading && <Spinner />}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}